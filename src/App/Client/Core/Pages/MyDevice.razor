@page "/MyDevice"
@namespace Functionland.FxBlox.Client.Core.Pages
@inherits AppComponentBase

<PageTitle>@Localizer[nameof(AppStrings.MyDevice)]</PageTitle>

<link rel="stylesheet" href="_content/Radzen.Blazor/css/material-base.css">
<script src="_content/Radzen.Blazor/Radzen.Blazor.js"></script>

<div class="page-basic-style">
    <div class="page-image"></div>
    <div class="page-content">
        <div class="state-info">

            <div class="blox-state">@BloxConnectionService.GetConnections().FirstOrDefault()?.Libp2pStatus</div>

            @if (BloxConnectionService.GetConnections().Any())
            {
                <div class="blox-id-title">Blox App Peer ID:</div>
                <div class="blox-id-value">@(BloxConnectionService.GetConnections().FirstOrDefault()?.Device.HardwareId)</div>
            }
        </div>
        <div class="installed-stacks">

            @if (CurrentConnection is not null)
            {
                <div class="installed-stacks-title">
                    Installed Stacks:
                </div>

                <div class="installed-stacks-list">
                    @if (CurrentConnection.Stacks.Any())
                    {
                        foreach (var stack in CurrentConnection.Stacks)
                        {
                            <div class="new-stack">
                                <div class="stack-title">
                                    @stack.Stack.Title
                                </div>

                                <div class="stack-status">
                                    @if (stack.Status.ToString() == "Running")
                                    {
                                        <div>
                                            0.000034 ETH
                                        </div>
                                        <div class="status-icon running-state"></div>
                                    }
                                    else
                                    {
                                        <div>
                                            @stack.Status
                                        </div>
                                        <div class="status-icon loading-state"></div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No stack installed yet</p>
                    }
                    <FxButton Text="Add Stack"
                              Class="new-stack-btn"
                              Width="150px"
                              ButtonStyle="FxButtonStyle.Outline"
                              OnClick="AddStackClicked" />
                </div>
            }
        </div>

    </div>
</div>

