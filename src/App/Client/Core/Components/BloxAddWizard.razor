@inherits AppComponentBase;

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600&display=swap" rel="stylesheet">

<div class="wizard-page">
    @if (WizardStep == BloxAddWizardStep.Welcome)
    {
        <div class="wizard-image welcome-image add-animation-content"></div>

        <div class="wizard-title add-animation-content">
            <div class="wizard-welcome">WELCOME TO</div>
            <div>Blox Setup</div>
        </div>

        <div class="wizard-content center-text intro-des add-animation-content">
            <div class="wizard-description center-text">
                <div class="description-title">
                    Make sure your Blox is turned on!
                </div>
            </div>
        </div>

        <div class="wizard-action-wrapper add-animation-content">
            <FxButton Text="Start"
                ButtonStyle="FxButtonStyle.Normal"
                ButtonSize="FxButtonSize.Stretch"
                OnClick="@(GoToNextStepAsync)">
            </FxButton>
        </div>
    }
    else if (WizardStep == BloxAddWizardStep.ConnectToWallet)
    {
        <div class="progress-bar">
            <div class="progress-fill"></div>
            <div class="progress-empty"></div>
            <div class="progress-empty"></div>
        </div>

        <div class="wizard-image setup-img add-animation-img"></div>
        <div class="wizard-title add-animation-content">Setup your wallet</div>
        <div class="wizard-content add-animation-content">
            @if(ProgressItems.Count <= 0) {
                <div class="wizard-description">
                <div class="description-title">
                    Select the network:
                </div>
                @*<BitDropdown class="action-section" Items="GetBlockchainNetworks()" @bind-Value="SelectedNetwork" />*@
                <ul class="list-wrapper">
                    @foreach(var item in BlockchainNetworks) {
                        <li class="list-item" @onclick="() => BlockchainNetworkClicked(item)">
                            <div class="item-box">
                                <div class="item-text">@ToReadable(item.Item)</div>
                                <div class="item-check @(item.IsSelected ? "item-check-selected" : string.Empty)"></div>
                            </div>
                        </li>
                    }
                </ul>
            </div>             
            } else {
                <div class="progress-container">
                    <ProgressList ProgressItems="ProgressItems" />
                </div>
            }
        </div>

        <div class="wizard-action-wrapper">
            @if (ShowConnectToWallet)
            {
                <FxButton Text="Connect to wallet"
                    ButtonStyle="FxButtonStyle.Normal"
                    ButtonSize="FxButtonSize.Stretch"
                    OnClick="@(ConnectToWalletClicked)">
                </FxButton>
            }
            else
            {
                <FxButton Text="Cancel"
                    ButtonStyle="FxButtonStyle.Outline"
                    ButtonSize="FxButtonSize.Stretch"
                    OnClick="CancelConnectToWalletClicked">
                </FxButton>
            }
        </div>    
    } 
    else if (WizardStep == BloxAddWizardStep.ConnectToHotspot)
    {
        <div class="progress-bar">
            <div class="progress-fill"></div>
            <div class="progress-fill"></div>
            <div class="progress-empty"></div>
        </div> 

        <div class="wizard-mult-img add-animation-img">
            <div class="phone-icon"></div>
            <div class="arrow-icon"></div>
            <div class="blox-icon"></div>
        </div>

        <div class="wizard-title add-animation-content">Connect to Blox</div>
        <div class="wizard-content add-animation-content">
            @if(ProgressItems.Count <= 0) {
                <div class="wizard-description">
                    <div class="description-title center-text">
                        Make sure your blox is turned on and its hotspot is available.
                    </div>
                </div>
            } else {
                <div class="progress-container">
                    <ProgressList ProgressItems="ProgressItems" />
                </div>
            }
        </div>

        <div class="wizard-action-wrapper">
            @if (ProgressItems.Count <= 0)
            {
                <FxButton Text="Connect to Blox"
                    ButtonStyle="FxButtonStyle.Normal"
                    ButtonSize="FxButtonSize.Stretch"
                    OnClick="@(ConnectToHotspotClicked)">
                </FxButton>
            }
            else
            {
                <FxButton Text="Cancel"
                    ButtonStyle="FxButtonStyle.Outline"
                    ButtonSize="FxButtonSize.Stretch"
                    OnClick="CancelConnectToHotspotClicked">
                </FxButton>
            }
        </div>       
    }
    else if (WizardStep == BloxAddWizardStep.ConnectBloxToWifi)
    {
        <div class="progress-bar">
            <div class="progress-fill"></div>
            <div class="progress-fill"></div>
            <div class="progress-fill"></div>
        </div> 

        // Temp placement
        <InputModal @ref="_passwordModalRef"/>
        // Temp placement

        <div class="wizard-mult-img add-animation-img">
            <div class="blox-icon"></div>
            <div class="arrow-icon"></div>
            <div class="wifi-icon"></div>
        </div>

        <div class="wizard-title add-animation-content">Connect Blox to Wi-Fi</div>
        <div class="wizard-content">
            @if(ProgressItems.Count <= 0) {
                <div class="wizard-description">
                    <div class="description-title">
                        Select the Wi-Fi for you Blox to connect:
                    </div>
                    @*<BitDropdown Items="AvailableWifiList" @bind-Value="SelectedWifiForBlox" />*@
                    <ul class="list-wrapper">
                    @foreach(var item in AvailableWifiList) {
                            <li class="list-item" @onclick="() => WifiClicked(item)">
                            <div class="item-box add-animation-list">
                                <div class="item-text">@item.Item.Ssid</div>
                                    <div class="item-check  @(item.IsSelected ? "item-check-selected" : string.Empty)"></div>
                            </div>
                        </li>
                    }
                </ul>
                </div>
            } else {
                <div class="progress-container">
                    <ProgressList ProgressItems="ProgressItems" />
                </div>
            }
        </div>

        <div class="wizard-action-wrapper">
            @if (ProgressItems.Count <= 0)
            {
                <FxButton Text="Connect Blox to Wi-Fi"
                    ButtonStyle="FxButtonStyle.Normal"
                    ButtonSize="FxButtonSize.Stretch"
                    OnClick="@(ConnectBloxToWifiClicked)">
                </FxButton>
            }
            else
            {
                <FxButton Text="Cancel"
                        ButtonStyle="FxButtonStyle.Outline"
                        ButtonSize="FxButtonSize.Stretch"
                        OnClick="CancelConnectBloxToWifiClicked">
                </FxButton>
            }
        </div>
    }
</div>

        <FxToast @ref="_toastRef"/>